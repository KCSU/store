// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	auth "github.com/kcsu/store/auth"

	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"
)

// Auth is an autogenerated mock type for the Auth type
type Auth struct {
	mock.Mock
}

// GetUserId provides a mock function with given fields: c
func (_m *Auth) GetUserId(c echo.Context) int {
	ret := _m.Called(c)

	var r0 int
	if rf, ok := ret.Get(0).(func(echo.Context) int); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// VerifyGoogleCsrfToken provides a mock function with given fields: c
func (_m *Auth) VerifyGoogleCsrfToken(c echo.Context) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyIdToken provides a mock function with given fields: token, c
func (_m *Auth) VerifyIdToken(token string, c context.Context) (*auth.OauthUser, error) {
	ret := _m.Called(token, c)

	var r0 *auth.OauthUser
	if rf, ok := ret.Get(0).(func(string, context.Context) *auth.OauthUser); ok {
		r0 = rf(token, c)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.OauthUser)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, context.Context) error); ok {
		r1 = rf(token, c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
